apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-tutorial
  namespace: fastapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi-tutorial
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fastapi-tutorial
      name: fastapi-tutorial
    spec:
      initContainers:
      - command:
        - git
        - clone
        - https://$(CR_USER):$(CR_PAT)@github.com/gwright99/fastapitutorial.git
        - /ghcontent/code
        env:
        - name: CR_USER
          valueFrom:
            secretKeyRef:
              key: cr_user
              name: gh-pat
        - name: CR_PAT
          valueFrom:
            secretKeyRef:
              key: cr_pat
              name: gh-pat
        image: alpine/git
        imagePullPolicy: Always
        name: git-clone
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /ghcontent
          name: repo-content

      # - command: ["sh", "-c", "sleep 3600"]
      #   image: alpine/git
      #   imagePullPolicy: Always
      #   name: sleepawhile
      #   resources: {}
      #   terminationMessagePath: /dev/termination-log
      #   terminationMessagePolicy: File
      #   volumeMounts:
      #   - mountPath: /ghcontent
      #     name: repo-content

      containers:
      - image: ghcr.io/gwright99/fastapitutorial:latest
        imagePullPolicy: Always
        name: fastapi-tutorial
        env:
        - name: ghcontent
          value: "/ghcontent/code"
        ports:
        - containerPort: 8081
          name: blah
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

        volumeMounts:
        - mountPath: /ghcontent
          name: repo-content
      dnsPolicy: ClusterFirst

      imagePullSecrets:
      - name: ghcr

      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30

      volumes:
      - emptyDir: {}
        name: repo-content
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-tutorial
  namespace: fastapi
spec:
  internalTrafficPolicy: Cluster
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8081
  selector:
    app: fastapi-tutorial
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  labels:
    argocd.argoproj.io/instance: fastapi-tutorial
  name: fastapi-tutorial
  namespace: fastapi
spec:
  hostnames:
  - fastapi.grahamwrightk8s.net
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: public-cloudflare
    namespace: gloo-system
  rules:
  - backendRefs:
    - group: ""
      kind: Service
      name: fastapi-tutorial
      port: 80
      weight: 1
    filters:
    - type: URLRewrite
      urlRewrite:
        path:
          replacePrefixMatch: /
          type: ReplacePrefixMatch
    matches:
    - method: GET
      path:
        type: PathPrefix
        value: /tutorial
  # - backendRefs:
  #   - group: ""
  #     kind: Service
  #     name: app2
  #     port: 8080
  #     weight: 1
  #   filters:
  #   - type: URLRewrite
  #     urlRewrite:
  #       path:
  #         replacePrefixMatch: /2015-03-31/functions/function/invocations
  #         type: ReplacePrefixMatch
  #   matches:
  #   - method: POST
  #     path:
  #       type: PathPrefix
  #       value: /app2